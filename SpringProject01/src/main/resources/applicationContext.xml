<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--  通过 spring new 一个对象   -->
    <!-- bean 豆子 javaBean 将java对象当做一个个豆子  -->
    <!-- IOC 控制反转  new Student() 由Spring来做，你只要把配方给他 -->
    <!--singleton 单例（默认）   当前 spring容器（专属空间） 只有一个实例化对象
        prototype 原型         可以通过多次 调用 getBean 获得多个对象
     -->
    <bean id="stu" class="com.gmgx.entity.Student" scope="prototype" init-method="initMethod" destroy-method="destroyMethod">
        <!--DI 依赖注入  由Spring帮你 赋值（赋 对象  ）   -->
        <property name="sno" value="1"></property>
        <property name="sname" value="zhw"></property>
    </bean>



    <!--  测试 如何赋值   -->
    <!-- 1 通过 set方式赋值  Spring会根据配置 调用  Student对象中的set方法给属性赋值 -->
    <!-- 注意：虽然 value的值都是用引号引起来，但是并不代表 赋的值就是都是字符串 ，
而是 会根据实际的内容，判定，比如 sno是整数类型，引号里面只能放整数 -->
    <!-- 先通过无参构造 创建出 一个对象，然后调用它的set方法 给参数赋值 -->
<!--        <bean id="stu2" class="com.gmgx.entity.Student" >-->
<!--            <property name="sno" value="1"></property>-->
<!--            <property name="sname" value="zhw"></property>-->
<!--        </bean>-->

    <!--2 通过构造方法的方式赋值  -->

    <bean id="stu3" class="com.gmgx.entity.Student">
        <constructor-arg name="sno" value="3" index="0"></constructor-arg>
        <constructor-arg name="sname" value="zhw3" index="1"></constructor-arg>
    </bean>

    <!--    <bean id="stu4" class="com.gmgx.entity.Student">-->
    <!--        <constructor-arg name="sno" value="3"></constructor-arg>-->
    <!--    </bean>-->

    <!--    <bean id="stu5" class="com.gmgx.entity.Student">-->
    <!--        <constructor-arg name="sname" value="zhw3"></constructor-arg>-->
    <!--    </bean>-->



    <!-- 如果属性 是 数组  set方式实现  -->
    <bean id="stu6" class="com.gmgx.entity.Student">
        <!-- 这种写法只能给 一个 元素（第一个元素赋值） -->
        <!--        <property name="scoreArr" value="1001"></property>-->
        <!-- 给数组 多个元素 赋值（给数组添加多个元素） -->
        <property name="scoreArr">
            <array>
                <value>101</value>
                <value>102</value>
            </array>
        </property>
    </bean>



    <!-- 如果属性 是 集合 或数组 用构造方法的实现  -->
    <bean id="stu7" class="com.gmgx.entity.Student">
        <!--        <constructor-arg name="scoreArr" value="2001"></constructor-arg>-->
        <constructor-arg name="scoreArr">
            <array>
                <value>201</value>
                <value>202</value>
            </array>
        </constructor-arg>

    </bean>



    <bean id="stu8" class="com.gmgx.entity.Student">
        <!--        <property name="addrList" value="xm"></property>-->
        <property name="addrList">
            <list>
                <value>qz</value>
                <value>zz</value>
            </list>
        </property>
    </bean>
    <!-- 构造方法同理 -->







    <bean id="stu9" class="com.gmgx.entity.Student">
        <!--        <property name="addrList" value="xm"></property>-->
        <property name="phoneMap">
            <map>
                <entry key="1" value="1300000000"></entry>  <!-- 迭代器 -->
                <entry key="2" value="1300000001"></entry>
            </map>
        </property>
    </bean>



</beans>