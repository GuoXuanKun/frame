<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <properties resource="db.properties"></properties>


    <!-- 配置 设置   -->
    <!-- 设置懒加载 -->
    <settings>
        <!--  默认是 非懒加载的 （不管三七二十一 ，全部都给你查出来（用户和订单） 即使你暂时没使用订单信息 ） -->
        <!-- 未开启懒加载  -->
        <setting name="lazyLoadingEnabled" value="true"/>
        <!-- 在 mybatis版本中  3.4.1之前  默认（true）积极的懒加载  之后，默认为false  按需加载  -->
        <!-- 激进的 侵略性的  懒加载  （ 比懒加载 稍微 积极的  ）  默认的： false  按需加载-->
        <!--        <setting name="aggressiveLazyLoading" value="false"/>-->
        <!--        <setting name="aggressiveLazyLoading" value="true"/>-->
        <!-- aggressiveLazyLoading   -->


    </settings>





    <typeAliases>
        <!--        <typeAlias type="com.gmgx.entity.Student" alias="student"></typeAlias>-->
        <!--        <typeAlias type="com.gmgx.entity.User" alias="user"></typeAlias>-->

        <package name="com.gmgx.entity"/><!-- 对应的别名  同 类名 一样，或者 类名首字母小写（推荐）  -->
        <package name="com.gmgx.dto"/>
    </typeAliases>


    <!-- 和spring整合后 environments配置将废除-->
    <environments default="development">
        <environment id="development">
            <!-- type的值可以选择  jdbc 使用jdbc事务管理,相当于手动管理事务
                                   Managed 不使用任何事务管理，交给其他的框架比如spring框架进行事务管理
            -->
            <transactionManager type="JDBC" />  <!-- 使用jdbc的事务   提交  和  回滚  （比如，业务逻辑  同时插入数据 ，如果第二个插入失败，需要回滚第第二个插入动作      ）     -->
            <!-- type的值可以选择   pooled  采用连接池的方式配置数据源  conn  预先 开几个连接在这里等待，请求 需要的时候，分配连接给它， 不需要就回收，等待其他人的连接
                                   unpooled 不采用连接池方式配置
                                   JNDI    采用JNDI方式实现数据连接池配置
             -->
            <dataSource type="POOLED">
                <property name="driver" value="${driver_name}" />
                <property name="url" value="${url}" />
                <property name="username" value="${username}" />
                <property name="password" value="${userpwd}" />
            </dataSource>
        </environment>
    </environments>

    <!-- 加载mapper.xml -->
    <mappers>
        <mapper resource="mapper/StudentMapper.xml" />
        <mapper resource="mapper/UserMapper.xml" />
        <mapper resource="mapper/ClassroomMapper.xml" />
        <mapper resource="mapper/OrderMapper.xml" />
        <!-- 根据你的代码编写，加载对应的mapper.xml -->
    </mappers>

</configuration>